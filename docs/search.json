[
  {
    "objectID": "posts/Opening-Apple-Health-data/index.html#opening-apple-health-data",
    "href": "posts/Opening-Apple-Health-data/index.html#opening-apple-health-data",
    "title": "Opening Apple Health data",
    "section": "Opening Apple Health data",
    "text": "Opening Apple Health data\nMy partner exported her Apple Health data using the Health app’s export functionality. We now have a folder of .xml files to deal with.\nLet’s take a look at export.xml which I think should contain the sleep data.\nReading the first few characters of the file\n\nlibrary('readr')\nhealth_filepath &lt;- '../../data/apple_health_export/export.xml'\nhealth_file &lt;- substr(read_file(health_filepath), 1, 2000)\nprint(health_file)\n\n[1] \"&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?&gt;\\n&lt;!DOCTYPE HealthData [\\n&lt;!-- HealthKit Export Version: 13 --&gt;\\n&lt;!ELEMENT HealthData (ExportDate,Me,(Record|Correlation|Workout|ActivitySummary|ClinicalRecord|Audiogram|VisionPrescription)*)&gt;\\n&lt;!ATTLIST HealthData\\n  locale CDATA #REQUIRED\\n&gt;\\n&lt;!ELEMENT ExportDate EMPTY&gt;\\n&lt;!ATTLIST ExportDate\\n  value CDATA #REQUIRED\\n&gt;\\n&lt;!ELEMENT Me EMPTY&gt;\\n&lt;!ATTLIST Me\\n  HKCharacteristicTypeIdentifierDateOfBirth                   CDATA #REQUIRED\\n  HKCharacteristicTypeIdentifierBiologicalSex                 CDATA #REQUIRED\\n  HKCharacteristicTypeIdentifierBloodType                     CDATA #REQUIRED\\n  HKCharacteristicTypeIdentifierFitzpatrickSkinType           CDATA #REQUIRED\\n  HKCharacteristicTypeIdentifierCardioFitnessMedicationsUse   CDATA #REQUIRED\\n&gt;\\n&lt;!ELEMENT Record ((MetadataEntry|HeartRateVariabilityMetadataList)*)&gt;\\n&lt;!ATTLIST Record\\n  type          CDATA #REQUIRED\\n  unit          CDATA #IMPLIED\\n  value         CDATA #IMPLIED\\n  sourceName    CDATA #REQUIRED\\n  sourceVersion CDATA #IMPLIED\\n  device        CDATA #IMPLIED\\n  creationDate  CDATA #IMPLIED\\n  startDate     CDATA #REQUIRED\\n  endDate       CDATA #REQUIRED\\n&gt;\\n&lt;!-- Note: Any Records that appear as children of a correlation also appear as top-level records in this document. --&gt;\\n&lt;!ELEMENT Correlation ((MetadataEntry|Record)*)&gt;\\n&lt;!ATTLIST Correlation\\n  type          CDATA #REQUIRED\\n  sourceName    CDATA #REQUIRED\\n  sourceVersion CDATA #IMPLIED\\n  device        CDATA #IMPLIED\\n  creationDate  CDATA #IMPLIED\\n  startDate     CDATA #REQUIRED\\n  endDate       CDATA #REQUIRED\\n&gt;\\n&lt;!ELEMENT Workout ((MetadataEntry|WorkoutEvent|WorkoutRoute|WorkoutStatistics)*)&gt;\\n&lt;!ATTLIST Workout\\n  workoutActivityType   CDATA #REQUIRED\\n  duration              CDATA #IMPLIED\\n  durationUnit          CDATA #IMPLIED\\n  totalDistance         CDATA #IMPLIED\\n  totalDistanceUnit     CDATA #IMPLIED\\n  totalEnergyBurned     CDATA #IMPLIED\\n  totalEnergyBurnedUnit CDATA #IMPLIED\\n  sourceName            CDATA #REQUIRED\\n  sourceVersion         C\"\n\n\nSo it looks like Apple use HKCharacteristicTypeIdentifier as a prefix to some data. Perhaps this is just a field name?\nLet’s parse the xml file properly and see what we have\n\n# install.packages(\"XML\") # I need this one to work with the xml files\nlibrary(\"XML\")\n\n# here are some ones that I think I might need\nlibrary(\"methods\")\nlibrary(\"tidyverse\")\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(\"lubridate\")\nlibrary(\"ggplot2\")\nlibrary(\"dplyr\")\n\n# parse the xml file\nhealth &lt;- xmlParse(health_filepath)\nsummary(health)\n\n$nameCounts\n\n                          Record      InstantaneousBeatsPerMinute \n                          505685                           171703 \n                   MetadataEntry HeartRateVariabilityMetadataList \n                          144203                             2511 \n                 ActivitySummary                     WorkoutEvent \n                             410                              172 \n               WorkoutStatistics                          Workout \n                             143                               38 \n                   FileReference                     WorkoutRoute \n                              30                               30 \n                      ExportDate                       HealthData \n                               1                                1 \n                              Me \n                               1 \n\n$numNodes\n[1] 824928\n\n\nHmm, not very helpful?\nInstead of spending more time trying to parse the xml file myself, let’s turn to Google. This site seems to have some explanations of what’s going on with the Apple Watch data. It looks like indeed HKQuantityTypeIdentifier is just a prefix for a field name. There should be a field called HKCategoryTypeIdentifierSleepAnalysis which sounds like what I am after!"
  },
  {
    "objectID": "posts/Opening-Apple-Health-data/index.html#exploring-the-data",
    "href": "posts/Opening-Apple-Health-data/index.html#exploring-the-data",
    "title": "Opening Apple Health data",
    "section": "Exploring the data",
    "text": "Exploring the data\nThis blog gives a snippet that should convert the entire xml import into a dataframe. This has saved a ton of time!\n\n# https://www.johngoldin.com/blog/apple-health-export/2022-07-notes-apple-health-export/index.html\nhealth_df &lt;- XML:::xmlAttrsToDataFrame(health[\"//Record\"], stringsAsFactors = FALSE) |&gt;\n        as_tibble() |&gt; mutate(value = as.numeric(value)) |&gt;\n        select(-device)  \n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `value = as.numeric(value)`.\nCaused by warning:\n! NAs introduced by coercion\n\nsummary(health_df)\n\n     type            sourceName        sourceVersion          unit          \n Length:505685      Length:505685      Length:505685      Length:505685     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n creationDate        startDate           endDate              value         \n Length:505685      Length:505685      Length:505685      Min.   :   0.000  \n Class :character   Class :character   Class :character   1st Qu.:   0.365  \n Mode  :character   Mode  :character   Mode  :character   Median :   1.266  \n                                                          Mean   :  27.002  \n                                                          3rd Qu.:  35.696  \n                                                          Max.   :1290.000  \n                                                          NA's   :17576     \n\n\n\ndim(health_df)\n\n[1] 505685      8\n\n\nOkay so we have half a million rows and eight columns. Let’s take a look inside:\n\nhealth_df %&gt;% \n  tail(10) %&gt;% \n  glimpse\n\nRows: 10\nColumns: 8\n$ type          &lt;chr&gt; \"HKQuantityTypeIdentifierHeartRateVariabilitySDNN\", \"HKQ…\n$ sourceName    &lt;chr&gt; \"Matthew’s Apple Watch\", \"Matthew’s Apple Watch\", \"Matth…\n$ sourceVersion &lt;chr&gt; \"10.0.1\", \"10.0.1\", \"10.0.1\", \"10.0.1\", \"10.0.1\", \"10.0.…\n$ unit          &lt;chr&gt; \"ms\", \"ms\", \"ms\", \"ms\", \"ms\", \"ms\", \"ms\", \"ms\", \"ms\", \"m…\n$ creationDate  &lt;chr&gt; \"2023-10-25 15:37:04 +0100\", \"2023-10-25 17:44:53 +0100\"…\n$ startDate     &lt;chr&gt; \"2023-10-25 15:36:03 +0100\", \"2023-10-25 17:43:52 +0100\"…\n$ endDate       &lt;chr&gt; \"2023-10-25 15:37:02 +0100\", \"2023-10-25 17:44:45 +0100\"…\n$ value         &lt;dbl&gt; 27.4134, 52.6730, 20.0241, 38.7226, 22.8867, 39.6330, 58…\n\n\nWe’ve already cast our values to numeric, which is great. Looks like we have some metadata (sourceName, sourceVersion) about how the data was collected. I should take a quick glance at these fields but I can probably ignore them.\nThe type field looks to contain my different health data, so I’ll want to filter by that. unit is probably nothing I need to think about, but once I’ve found my sleep data I should just check that I can safely ignore the field.\nThen we have creationDate, startDate and endDate. I will need to cast these to datetimes (& work out how to work with datetimes in R!) and then work out how they relate to the value field for the sleep data that I am interested in. I assume that the relationship between the datetime fields and value will differ depending on type so there’s not going to be a one-size-fits-all approach here.\n\ntype distribution\nLet’s look at the most frequent type’s"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome to Matt’s Baby stats",
    "section": "",
    "text": "My name is Matt. This is me and my baby:\n\nI have a background in computational physics and am a data scientist by trade.\nMe and my partner would like to know what factors contribute to a good night’s sleep for our baby. In particular, I would like to answer the following questions:\nDoes a late nap contribute to a worse night’s sleep? Does the timing of bathtime affect sleep patterns? Does a more substantial evening ‘meal’ contribute to longer sleep?\nI have the following data sources:\n\nSQLite database from Baby Daybook app → nap data. Self-reported.\nXML files from Apple Health → nighttime sleep data. Measured on Apple Watch. Use this as a proxy for baby sleep.\nNumbers spreadsheet → additional nap data, self-reported. Use this to vibe check the data from Baby Daybook and assess it for quality and cleanliness.\n\nI’ll be using R and SQLite to bring these data sources together and try to gain some understanding. Plan is to stick it into this blog along the way."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Does a late nap mean a worse night’s sleep?",
    "section": "",
    "text": "Opening Apple Health data\n\n\n\n\n\n\n\napple\n\n\ncode\n\n\nimport\n\n\nxml\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nOct 26, 2023\n\n\nMatt Thornton\n\n\n\n\n\n\n  \n\n\n\n\nWelcome to Matt’s Baby stats\n\n\n\n\n\n\n\nnews\n\n\nbaby\n\n\n\n\n\n\n\n\n\n\n\nOct 25, 2023\n\n\nMatt Thornton\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Matt and his Baby Stats",
    "section": "",
    "text": "My name is Matt. I have a baby. I would like to see whether a nap later in the day corresponds to the baby (and by extension me and my partner) having a worse night’s sleep.\nThe project will be mainly in R and SQLite. My daily data analysis stack is Python+MySQL so I will use this project to learn some new things. It will be a nice chance to spend more time in RStudio, which is clearly the superlative IDE for my type of data work.\nI don’t completely expect the project to yield anything earth shattering but it is a nice excuse to do some data visualisations and practice my R.\nI’ll be using self-reported data from a baby tracking app, some data we’ve written ourselves in a Numbers spreadsheet, and my partner’s Apple Watch sleep tracking data, in an attempt to answer the following questions:"
  },
  {
    "objectID": "about.html#about-matt",
    "href": "about.html#about-matt",
    "title": "About Matt and his Baby Stats",
    "section": "About Matt",
    "text": "About Matt\nI am a Lead Data Scientist at Twinkl Education Publishing. I have a PhD in theoretical quantum physics from the University of St Andrews and I spend most of my time making powerpoints and doing analysis to measure and improve metrics at Twinkl."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Matt and his Baby Stats",
    "section": "Education",
    "text": "Education\nUniversity of St Andrews PhD in Theoretical Physics | Sept 2016 - March 2020\nUniversity of St Andrews MPhys Mathematics and Theoretical Physics | Sept 2011 - June 2016"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About Matt and his Baby Stats",
    "section": "Experience",
    "text": "Experience\nTwinkl Educational Publishing | Lead Data Scientist | August 2022 - present\nTwinkl Educational Publishing | Data Scientist | January 2022 - August 2022\nPivigo | Data Scientist Fellow | October 2022 - November 2022\nUniversity of St Andrews | Research Fellow | April 2020 - June 2021"
  }
]